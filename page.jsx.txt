"use client"

import { useState, useEffect } from "react"
import Sidebar from "./Sidebar"
import Header from "./Header"
import FloatingAIWidget from "./FloatingAIWidget"
import { AlertTriangle, Users, Heart, Phone, PhoneCall, MessageCircle, MapPin } from 'lucide-react'
import "../styles/Home.css"

const Home = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false)
  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false)
  const [isLoggedIn, setIsLoggedIn] = useState(true)
  const [userLocation, setUserLocation] = useState(null)
  const [isPanicActive, setIsPanicActive] = useState(false)
  const [isAIWidgetOpen, setIsAIWidgetOpen] = useState(false)

  const emergencyContacts = [
    { id: 1, name: "María González", relation: "Hermana", phone: "+57 300 123 4567" },
    { id: 2, name: "Carlos Rodríguez", relation: "Amigo", phone: "+57 301 987 6543" },
  ]

  const supportResources = [
    { title: "Línea Nacional", phone: "155", available: "24/7" },
    { title: "Policía Nacional", phone: "123", available: "24/7" },
  ]

  useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          setUserLocation({
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          })
        },
        (error) => {
          console.log("Error getting location:", error)
        },
      )
    }
  }, [])

  const handlePanicButton = () => {
    setIsPanicActive(true)
    setTimeout(() => {
      setIsPanicActive(false)
      alert("Alerta enviada a contactos de emergencia y autoridades")
    }, 3000)
  }

  return (
    <div className="home-container">
      <Sidebar isMenuOpen={isMenuOpen} setIsMenuOpen={setIsMenuOpen} currentPage="home" />

      {isMenuOpen && <div className="overlay" onClick={() => setIsMenuOpen(false)} />}

      <Header
        isMenuOpen={isMenuOpen}
        setIsMenuOpen={setIsMenuOpen}
        isUserMenuOpen={isUserMenuOpen}
        setIsUserMenuOpen={setIsUserMenuOpen}
        isLoggedIn={isLoggedIn}
        setIsLoggedIn={setIsLoggedIn}
      />

      {/* Main Content */}
      <div className="main-content">
        {/* Home Header */}
        <div className="home-header">
          <div className="logo-section">
            <img src="/images/beacon-logo.png" alt="BeaconHelp Logo" className="logo" />
            <h1 className="app-title">BeaconHelp</h1>
          </div>
          <p className="app-subtitle">Denuncia sin miedo, te acompañamos</p>
          {userLocation && (
            <div className="location-indicator">
              <MapPin className="location-icon" />
              <span>Ubicación detectada</span>
            </div>
          )}
        </div>

        {/* Panic Button */}
        <div className="panic-section">
          <button
            className={`panic-button ${isPanicActive ? "panic-active" : ""}`}
            onClick={handlePanicButton}
            disabled={isPanicActive}
          >
            {isPanicActive ? (
              <div className="panic-content panic-sending">
                <AlertTriangle className="panic-icon" />
                Enviando...
              </div>
            ) : (
              <div className="panic-content">
                <AlertTriangle className="panic-icon" />
                <span>AYUDA</span>
              </div>
            )}
          </button>
          <p className="panic-description">Presiona para enviar alerta inmediata a tus contactos y autoridades</p>
        </div>

        {/* Quick Actions */}
        <div className="quick-actions">
          <button className="quick-action-btn">
            <PhoneCall className="action-icon" />
            <span>Llamar 123</span>
          </button>
          <button className="quick-action-btn">
            <MessageCircle className="action-icon" />
            <span>Chat Apoyo</span>
          </button>
        </div>

        {/* Emergency Contacts */}
        <div className="section-card">
          <div className="section-header">
            <h3 className="section-title">
              <Users className="section-icon" />
              Contactos de Emergencia
            </h3>
            <p className="section-description">Personas que serán notificadas en caso de emergencia</p>
          </div>
          <div className="contacts-list">
            {emergencyContacts.map((contact, index) => (
              <div key={index} className="contact-item">
                <div className="contact-info">
                  <div className="contact-avatar">
                    {contact.name
                      .split(" ")
                      .map((n) => n[0])
                      .join("")}
                  </div>
                  <div className="contact-details">
                    <p className="contact-name">{contact.name}</p>
                    <p className="contact-relation">{contact.relation}</p>
                  </div>
                </div>
                <button className="contact-phone-btn">
                  <Phone className="phone-icon" />
                </button>
              </div>
            ))}
          </div>
        </div>

        {/* Support Resources */}
        <div className="section-card">
          <div className="section-header">
            <h3 className="section-title">
              <Heart className="section-icon" />
              Recursos de Apoyo
            </h3>
            <p className="section-description">Líneas de ayuda y apoyo psicológico disponibles</p>
          </div>
          <div className="resources-list">
            {supportResources.map((resource, index) => (
              <div key={index} className="resource-item">
                <div className="resource-info">
                  <p className="resource-title">{resource.title}</p>
                  <div className="resource-details">
                    <span className="resource-phone">{resource.phone}</span>
                    <span className="resource-availability">{resource.available}</span>
                  </div>
                </div>
                <button className="resource-call-btn">
                  <Phone className="phone-icon" />
                </button>
              </div>
            ))}
          </div>
        </div>
      </div>

      <FloatingAIWidget isOpen={isAIWidgetOpen} setIsOpen={setIsAIWidgetOpen} />

      {/* Footer */}
      <footer className="footer">
        <div className="footer-content">
          <div className="footer-logo">
            <img src="/images/beacon-logo.png" alt="BeaconHelp Logo" className="footer-logo-img" />
            <span className="footer-logo-text">BeaconHelp</span>
          </div>
          <p className="footer-description">
            Denuncia sin miedo, te acompañamos en cada paso hacia la seguridad ciudadana.
          </p>
          <div className="footer-links">
            <span>© 2024 BeaconHelp</span>
            <span>•</span>
            <a href="#" className="footer-link">
              Privacidad
            </a>
            <span>•</span>
            <a href="#" className="footer-link">
              Términos
            </a>
          </div>
        </div>
      </footer>
    </div>
  )
}

export default Home